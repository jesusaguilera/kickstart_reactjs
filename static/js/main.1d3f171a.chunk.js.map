{"version":3,"sources":["serviceWorker.js","components/Modal.js","containers/Home.js","containers/About.js","containers/NotFound.js","components/Nav.js","components/Logo.js","components/Header.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Modal","props","useEffect","triggerButtons","document","querySelectorAll","forEach","call","triggerButton","addEventListener","e","triggerButtonData","target","getAttribute","modal","querySelector","closeButton","body","classList","toggle","add","remove","initModal","modalClasses","dataModal","push","className","join","children","Home","class","data-modal","type","About","NotFound","Nav","to","Logo","Header","App","title","render","TransitionGroup","component","appear","CSSTransition","key","classNames","timeout","path","exact","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2NAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,0CC4BSC,EApBD,SAACC,GACbC,qBAAU,YAvBM,WAChB,IAAIC,EAAiBC,SAASC,iBAAiB,qBAE/C,GAAGC,QAAQC,KAAKJ,GAAgB,SAACK,GAC/BA,EAAcC,iBAAiB,SAAS,SAACC,GACvC,IACIC,EADgBD,EAAEE,OACgBC,aAAa,cAC/CC,EAAQV,SAASW,cAAT,mBAAmCJ,IAC3CK,EAAcF,EAAMC,cAAc,oBAClCE,EAAOb,SAASa,KAEpBH,EAAMI,UAAUC,OAAO,cACvBF,EAAKC,UAAUE,IAAI,aAEnBJ,EAAYP,iBAAiB,SAAS,SAACC,GACrCI,EAAMI,UAAUG,OAAO,cACvBJ,EAAKC,UAAUG,OAAO,sBAQ1BC,KACC,IAEH,IAAIC,EAAe,CAAC,WAGpB,OAFAtB,EAAMuB,WAAaD,EAAaE,KAAKxB,EAAMuB,WAGzC,yBAAKE,UAAWH,EAAaI,KAAK,MAChC,yBAAKD,UAAU,sBAAsBzB,EAAM2B,YC0ClCC,EAxEF,WACX,OACE,6BAASH,UAAU,oBACjB,yBAAKA,UAAU,eACb,4CAGA,4BACEI,MAAM,4BACNC,aAAW,qBAEX,0BAAML,UAAU,kBAAhB,eAEF,kBAAC,EAAD,CAAOF,UAAW,qBAChB,yBAAKM,MAAM,0CACT,4BAAQE,KAAK,SAASF,MAAM,kCAA5B,SAGA,yBAAKA,MAAM,mBACT,uBAAGA,MAAM,yBAAT,iBAEF,yBAAKA,MAAM,oBAAX,q9EA0CA,yBAAKA,MAAM,mBAAX,qBCzDGG,EAVD,WACZ,OACE,6BAASP,UAAU,oBACjB,yBAAKA,UAAU,eACb,gDCIOQ,EARE,WACf,OACE,6BAASR,UAAU,aACjB,qCCkBSS,EAnBH,WACV,OACE,yBAAKT,UAAU,SACb,wBAAIA,UAAU,eACZ,wBAAIA,UAAU,oBACZ,kBAAC,IAAD,CAAMU,GAAG,IAAIV,UAAU,eAAvB,SAIF,wBAAIA,UAAU,oBACZ,kBAAC,IAAD,CAAMU,GAAG,SAASV,UAAU,eAA5B,aCFKW,EARF,WACX,OACE,yBAAKX,UAAU,UACb,sCCiBSY,EATA,WACb,OACE,4BAAQZ,UAAU,YAChB,kBAAC,EAAD,MACA,kBAAC,EAAD,QC+BSa,MA7Bf,WAGE,OAFArC,qBAAU,kBAAOE,SAASoC,MAAQ,cAAc,IAG9C,kBAAC,IAAD,KACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CACEC,OAAQ,gBAAG5C,EAAH,EAAGA,SAAH,OACN,kBAAC6C,EAAA,EAAD,CAAiBC,UAAW,KAAMC,QAAQ,GACxC,kBAACC,EAAA,EAAD,CACEC,IAAKjD,EAASiD,IACdC,WAAW,UACXC,QAAS,KAET,kBAAC,IAAD,CAAQnD,SAAUA,GAChB,kBAAC,IAAD,CAAOoD,KAAK,SAASN,UAAWV,IAChC,kBAAC,IAAD,CAAOgB,KAAK,IAAIC,OAAK,EAACP,UAAWd,IACjC,kBAAC,IAAD,CAAOc,UAAWT,aC9BpCiB,IAASV,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFrC,SAASgD,eAAe,STsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1d3f171a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Dependencies\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst initModal = () => {\n  let triggerButtons = document.querySelectorAll(\".c-modal__trigger\");\n\n  [].forEach.call(triggerButtons, (triggerButton) => {\n    triggerButton.addEventListener(\"click\", (e) => {\n      let triggerButton = e.target;\n      let triggerButtonData = triggerButton.getAttribute(\"data-modal\");\n      let modal = document.querySelector(`.c-modal.${triggerButtonData}`);\n      let closeButton = modal.querySelector(\".js-modal__close\");\n      let body = document.body;\n\n      modal.classList.toggle(\"is-visible\");\n      body.classList.add(\"has-modal\");\n\n      closeButton.addEventListener(\"click\", (e) => {\n        modal.classList.remove(\"is-visible\");\n        body.classList.remove(\"has-modal\");\n      });\n    });\n  });\n};\n\nconst Modal = (props) => {\n  useEffect(() => {\n    initModal();\n  }, []);\n\n  let modalClasses = [\"c-modal\"];\n  props.dataModal && modalClasses.push(props.dataModal);\n\n  return (\n    <div className={modalClasses.join(\" \")}>\n      <div className=\"c-modal__container\">{props.children}</div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  dataModal: PropTypes.string,\n};\n\nexport default Modal;\n","// Dependencies\nimport React from \"react\";\n\n// Components\nimport Modal from \"../components/Modal\";\n\nconst Home = () => {\n  return (\n    <section className=\"o-wrapper o-fade\">\n      <div className=\"o-container\">\n        <h1>Welcome home</h1>\n\n        {/* Modal */}\n        <button\n          class=\"c-button c-modal__trigger\"\n          data-modal=\"js-modal--default\"\n        >\n          <span className=\"c-button__text\">Open modal</span>\n        </button>\n        <Modal dataModal={\"js-modal--default\"}>\n          <div class=\"c-modal__container modal-buy-container\">\n            <button type=\"button\" class=\"c-modal__close js-modal__close\">\n              close\n            </button>\n            <div class=\"c-modal__header\">\n              <p class=\"c-modal__header-title\">Modal header</p>\n            </div>\n            <div class=\"c-modal__content\">\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n              Pellentesque blandit turpis elit, et dapibus metus venenatis in.\n              Nullam ut mauris orci. Proin semper sem quam, viverra faucibus\n              nisl consectetur ut. Nulla ornare ullamcorper felis, cursus\n              tincidunt mauris sodales ut. Donec aliquam nunc in sagittis\n              laoreet. Quisque lacinia magna eu magna viverra pharetra. Ut\n              mollis ornare mauris, et rutrum lacus interdum lobortis. Donec\n              varius, lectus vitae condimentum elementum, urna est porttitor\n              ligula, vel porta neque nulla vitae magna. Integer commodo eu leo\n              vitae imperdiet. Nunc consectetur eros non erat eleifend finibus.\n              Etiam vitae magna ac eros pretium pellentesque. Sed sagittis ante\n              a massa mattis dignissim. Fusce rhoncus turpis at est vulputate\n              volutpat vel eu nisl. Fusce tortor turpis, vestibulum ut placerat\n              nec, cursus id turpis. Donec orci neque, aliquet in eros ut,\n              vehicula tristique risus. Praesent gravida faucibus nulla, ac\n              iaculis nisl efficitur eget. Nunc sit amet molestie nibh, eget\n              bibendum purus. Fusce molestie ac enim id finibus. Sed dapibus\n              augue nec purus consectetur blandit. Suspendisse a mi eget massa\n              condimentum mattis. Sed non ex in odio posuere lacinia. Sed\n              bibendum, odio ac pellentesque pulvinar, ligula enim euismod\n              magna, eget ultricies ligula elit in urna. Vestibulum et eros\n              volutpat, ultricies orci blandit, pellentesque lorem. Sed dictum,\n              quam a tempus egestas, dui nulla egestas diam, sed sollicitudin\n              magna neque sit amet dui. Duis viverra massa eget sem aliquet\n              vehicula. Curabitur lacus lorem, blandit in mauris in, vestibulum\n              varius ipsum. Nunc ullamcorper turpis id aliquet sodales. In\n              congue convallis consectetur. Maecenas efficitur libero sed quam\n              egestas interdum. Maecenas id luctus quam. Interdum et malesuada\n              fames ac ante ipsum primis in faucibus. Donec ultrices maximus\n              sem. Nam efficitur ac sem a condimentum. Pellentesque a urna ac\n              dui commodo interdum. Nullam nibh odio, elementum vitae pulvinar\n              sed, porttitor a eros. Vestibulum volutpat mi at ante scelerisque\n              venenatis. Cras sed risus felis. Quisque fringilla justo nec\n              ullamcorper iaculis. Sed consectetur tincidunt mauris. In sit amet\n              ligula vitae arcu eleifend efficitur. Vestibulum eu convallis\n              nisl. Morbi metus nibh, molestie vitae pretium in, tincidunt non\n              purus. Aenean aliquet diam vel eros viverra pharetra. Vestibulum\n              pharetra suscipit mauris at gravida. Maecenas vel gravida mi, ut\n              imperdiet odio. Nam justo diam, interdum sed sapien at, luctus\n              vestibulum est. Quisque et semper ligula.\n            </div>\n            <div class=\"c-modal__footer\">Modal footer</div>\n          </div>\n        </Modal>\n        {/* @Modal */}\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <section className=\"o-wrapper o-fade\">\n      <div className=\"o-container\">\n        <h1>Welcome about</h1>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <section className=\"o-wrapper\">\n      <h1>404</h1>\n    </section>\n  );\n};\n\nexport default NotFound;\n","// Dependencies\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = () => {\n  return (\n    <nav className=\"c-nav\">\n      <ul className=\"c-nav__list\">\n        <li className=\"c-nav__list-item\">\n          <Link to=\"/\" className=\"c-nav__link\">\n            Home\n          </Link>\n        </li>\n        <li className=\"c-nav__list-item\">\n          <Link to=\"/about\" className=\"c-nav__link\">\n            About\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","// Dependencies\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Logo = () => {\n  return (\n    <div className=\"c-logo\">\n      <h2>Logo</h2>\n    </div>\n  );\n};\n\nexport default Logo;\n","// Dependencies\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useLocation,\n  useParams,\n} from \"react-router-dom\";\n\nimport Nav from \"./Nav\";\nimport Logo from \"./Logo\";\n\nconst Header = () => {\n  return (\n    <header className=\"c-header\">\n      <Logo />\n      <Nav />\n    </header>\n  );\n};\n\nexport default Header;\n","// Libs\nimport React, { useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useLocation,\n  useParams,\n} from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\n// Containers\nimport Home from \"./containers/Home\";\nimport About from \"./containers/About\";\nimport NotFound from \"./containers/NotFound\";\n\n// Components\nimport Header from \"./components/Header\";\n\nfunction App() {\n  useEffect(() => (document.title = \"jaguilera\"), []);\n\n  return (\n    <Router>\n      <>\n        <Header />\n        <Route\n          render={({ location }) => (\n            <TransitionGroup component={null} appear={true}>\n              <CSSTransition\n                key={location.key}\n                classNames=\"o-fade-\"\n                timeout={300}\n              >\n                <Switch location={location}>\n                  <Route path=\"/about\" component={About} />\n                  <Route path=\"/\" exact component={Home} />\n                  <Route component={NotFound} />\n                </Switch>\n              </CSSTransition>\n            </TransitionGroup>\n          )}\n        />\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./assets/scss/main.scss\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}